-- Database schema generated by Zepster
-- Source: out1.erml
-- Generated: 2020-10-15T22:02:22.909433

create table enum_headstock (pk integer primary key, name varchar(500));
insert into enum_headstock (pk, name) values (1, 'MARTIN_STYLE');
insert into enum_headstock (pk, name) values (2, 'GUILD_STYLE');
insert into enum_headstock (pk, name) values (3, 'CLASSICAL');
insert into enum_headstock (pk, name) values (4, 'INLINE');

create table enum_fin_location (pk integer primary key, name varchar(500));
insert into enum_fin_location (pk, name) values (1, 'DORSAL');
insert into enum_fin_location (pk, name) values (2, 'VENTRAL');
insert into enum_fin_location (pk, name) values (3, 'PECTORAL');
insert into enum_fin_location (pk, name) values (4, 'PELVIC');
insert into enum_fin_location (pk, name) values (5, 'CAUDAL');

-- Description:
-- Matter state.  Do we need a paper?

-- Note:
-- These are not the official values.  This is just a placeholder for the real values.
create table enum_matter (pk integer primary key, name varchar(500));
insert into enum_matter (pk, name) values (1, 'SOLID');
-- Description:
-- Is semisolid a solid or a liquid?
insert into enum_matter (pk, name) values (2, 'LIQUID');
insert into enum_matter (pk, name) values (3, 'GAS');
insert into enum_matter (pk, name) values (4, 'PLASMA');

-- Description:
-- A device to determine altitude

-- Note:
-- [need a way to distinguish between altimiters that are self-contained and those which need satellites]

create table altimiter (
  pk uuid not null default gen_random_uuid() primary key,
  name string not null unique
);

-- Note:
-- [many more fields]

create table bird (
  pk uuid not null default gen_random_uuid() primary key,
  fin_location integer references enum_fin_location(pk)
);

-- Description:
-- "Kind of coffee liked most.
-- 
-- There are TWO KINDS of preferences:
-- 
-- - indivudual
-- - group"
create table coffee_preference (
  pk uuid not null default gen_random_uuid() primary key,
  -- Description:
  -- For presenting similar things together in a UI
  headstock integer references enum_headstock(pk) not null,
  name string not null unique
);

-- Note:
-- same for rollerblade and longboard?
-- 
-- E.g. LandShark

create table elbow_pad (
  pk uuid not null default gen_random_uuid() primary key
);

-- Description:
-- These are things that are subject to being replaced
create table pentode (
  pk uuid not null default gen_random_uuid() primary key
);

-- Description:
-- A waterway for transporting televisions via boat or barge.
create table television_channel (
  pk uuid not null default gen_random_uuid() primary key,
  -- Description:
  -- For rotating inventory like vinyl records, lazy susans, or hubcaps
  headstock integer references enum_headstock(pk) not null,
  name string not null unique
);

-- Description:
-- This is a condition on a boundary

-- Note:
-- [From conference call]
-- [Where is the boundary?]

create table boundary_condition (
  pk uuid not null default gen_random_uuid() primary key,
  fk_elbow_pad uuid references elbow_pad(pk) on delete set null,
  id integer not null unique
);

-- Description:
-- High-quality loamy topsoil
create table coffee_ground (
  pk uuid not null default gen_random_uuid() primary key,
  fk_coffee_preference uuid not null references coffee_preference(pk) on delete cascade,
  version string not null
);

create table music_maker (
  pk uuid not null default gen_random_uuid() primary key,
  fk_bird uuid not null references bird(pk) on delete cascade
);

-- Description:
-- A specific flavor of ice cream

-- Note:
-- Question about whether this is declared  or inferred

create table search_radius (
  pk uuid not null default gen_random_uuid() primary key,
  fk_altimiter uuid not null references altimiter(pk) on delete cascade,
  version string not null
);

create table snake_scarer (
  pk uuid not null default gen_random_uuid() primary key,
  fk_bird uuid not null references bird(pk) on delete cascade
);

create table _bird_mm_search_radius (
  pk uuid not null default gen_random_uuid() primary key,
  fk_bird uuid not null references bird(pk) on delete cascade,
  fk_search_radius uuid not null references search_radius(pk) on delete cascade
);

-- Description:
-- many-to-many mapping table
create table coffee_ground_mm_search_radius (
  pk uuid not null default gen_random_uuid() primary key,
  fk_search_radius uuid not null references search_radius(pk) on delete cascade,
  fk_coffee_ground uuid not null references coffee_ground(pk) on delete cascade
);

create table facilitator (
  pk uuid not null default gen_random_uuid() primary key,
  fk_coffee_ground uuid not null references coffee_ground(pk) on delete cascade,
  fk_television_channel uuid not null references television_channel(pk) on delete cascade,
  version string not null
);

create table portafilter (
  pk uuid not null default gen_random_uuid() primary key,
  fk_pentode uuid not null references pentode(pk) on delete cascade,
  fk_coffee_ground uuid not null references coffee_ground(pk) on delete cascade,
  headstock integer references enum_headstock(pk) not null
);

-- Note:
-- question
-- + date or datetime?
-- + are all states the same?  
-- + other?

create table state (
  pk uuid not null default gen_random_uuid() primary key,
  fk_pentode uuid not null references pentode(pk),
  -- Note:
  -- Date time zone is UTC
  date_applicable_begin date not null,
  -- Note:
  -- Date time zone is UTC
  date_applicable_end date not null,
  matter integer references enum_matter(pk) not null,
  -- Note:
  -- multiple scientists
  scientist_id string not null
);

create table torque_converter (
  pk uuid not null default gen_random_uuid() primary key,
  fk_pentode uuid not null references pentode(pk) on delete cascade,
  fk_search_radius uuid not null references search_radius(pk) on delete cascade,
  headstock integer references enum_headstock(pk) not null
);

create table county (
  pk uuid not null default gen_random_uuid() primary key,
  fk_state uuid not null references state(pk) on delete cascade
);

create table facet (
  pk uuid not null default gen_random_uuid() primary key,
  fk_facilitator uuid not null references facilitator(pk) on delete cascade,
  fk_pentode uuid not null references pentode(pk) on delete cascade,
  headstock integer references enum_headstock(pk) not null
);

create table ranch (
  pk uuid not null default gen_random_uuid() primary key,
  fk_pentode uuid not null references pentode(pk) on delete cascade,
  fk_coffee_ground_mm_search_radius uuid not null references coffee_ground_mm_search_radius(pk) on delete cascade,
  headstock integer references enum_headstock(pk) not null
);

-- Description:
-- many-to-many mapping table
create table search_radius_mm_facilitator (
  pk uuid not null default gen_random_uuid() primary key,
  fk_facilitator uuid not null references facilitator(pk) on delete cascade,
  fk_search_radius uuid not null references search_radius(pk) on delete cascade
);

create table scoville_unit (
  pk uuid not null default gen_random_uuid() primary key,
  fk_search_radius_mm_facilitator uuid not null references search_radius_mm_facilitator(pk) on delete cascade,
  fk_pentode uuid not null references pentode(pk) on delete cascade,
  headstock integer references enum_headstock(pk) not null
);




-- drop table if exists scoville_unit;
-- drop table if exists search_radius_mm_facilitator;
-- drop table if exists ranch;
-- drop table if exists facet;
-- drop table if exists county;
-- drop table if exists torque_converter;
-- drop table if exists state;
-- drop table if exists portafilter;
-- drop table if exists facilitator;
-- drop table if exists coffee_ground_mm_search_radius;
-- drop table if exists _bird_mm_search_radius;
-- drop table if exists snake_scarer;
-- drop table if exists search_radius;
-- drop table if exists music_maker;
-- drop table if exists coffee_ground;
-- drop table if exists boundary_condition;
-- drop table if exists television_channel;
-- drop table if exists pentode;
-- drop table if exists elbow_pad;
-- drop table if exists coffee_preference;
-- drop table if exists bird;
-- drop table if exists altimiter;
-- drop table if exists enum_headstock;
-- drop table if exists enum_fin_location;
-- drop table if exists enum_matter;
